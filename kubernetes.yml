apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    name: hello-ns
  name: hello-ns
  selfLink: /api/v1/namespaces/hello-ns
spec:
  finalizers:
  - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Service
metadata:
  name: hello-app-svc
  namespace: hello-ns
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: hello-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: hello-ns
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: hello-ns
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-app
  namespace: hello-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-app
  template:
    metadata:
      labels:
        app: hello-app
    spec:
      containers:
      - name: hello-app
        image: hello-app:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: ENGINE
          value: redis
        - name: MESSAGE
          value: This is my 12th run
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-app-ingress
  namespace: hello-ns
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
 rules:
 - host: hello-app
   http:
     paths:
     - path: /*
       backend:
         serviceName: hello-app-svc
         servicePort: 8080

